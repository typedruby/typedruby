#!/usr/bin/env ruby

RE_BODY = /struct builder \{(.*?)\}/m
RE_FUNC = /foreign_ptr\(\*(\w+)\)\((.*?)\);/

TYPE_CONVERSION = {
  "const base_driver*" => "*mut Parser",
  "foreign_ptr" => "*mut Rc<Node>",
  "const token*" => "*const Token",
  "const node_list*" => "*mut NodeList",
  "bool" => "bool",
  "size_t" => "size_t",
}

filename = ARGV.first
abort("missing input filename") unless filename

cpp = File.read(filename)
builder = RE_BODY.match(cpp)

abort("failed to match 'struct builder' body in #{filename}") unless builder
defs = builder[1].split("\n").map { |d| d.strip }.reject { |d| d.empty? }

puts "// This file is autogenerated by script/mkbuilder"
puts "// DO NOT MODIFY"
puts "#[repr(C)]"
puts "pub struct Builder {"

defs.each do |d|
  match = RE_FUNC.match(d)
  abort("bad definition: '#{d}'") unless match
  method, args = match[1], match[2]

  args = args.split(",").map { |a| a.strip }
  args = args.map do |arg|
    arg = arg.split(' ')
    argname = arg.pop
    ctype = arg.join(' ')
    rstype = TYPE_CONVERSION[ctype]
    abort("unknown C type: #{ctype}") unless rstype

    "#{argname}: #{rstype}"
  end

  puts "\tpub #{method}: unsafe extern \"C\" fn(#{args.join(", ")}) -> *mut Rc<Node>,"
end

puts "}"

